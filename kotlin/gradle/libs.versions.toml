## Generated by $ ./gradlew refreshVersionsCatalog

[plugins]

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
nexus_publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus" }

[versions]

rpc4k = "0.7.0"
nexus = "2.0.0"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.21"
kotlinpoet = "1.17.0"
coroutines = "1.8.1"
serialization = "1.7.0-RC"
compileTesting = "1.6.0"
junit = "5.10.2"
okhttp = "5.0.0-alpha.14"
ktor = "2.3.11"
logback = "1.5.6"
strikt = "0.34.1"
nodejs = "7.0.2"

[libraries]

nodejs = {module = "com.github.node-gradle:gradle-node-plugin" , version.ref = "nodejs"}
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
compile-testing-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "compileTesting" }
junit = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
ktor-core = { module = "io.ktor:ktor-server", version.ref = "ktor" }
ktor-host = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
okhttp-sse = { module = "com.squareup.okhttp3:okhttp-sse", version.ref = "okhttp" }
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
strikt = { module = "io.strikt:strikt-jvm", version.ref = "strikt" }
